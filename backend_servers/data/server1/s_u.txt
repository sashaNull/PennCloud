susan123@/ items [D@folder1]
susan123@/folder1/ items [F@file1.txt;;F@file2.doc]
susan123@/folder1/file1.txt content U29ycnksIEkgY2Fubm90IGhlbHAgd2l0aCB0aGF0Lg==
susan123@/folder1/file2.doc content U29ycnksIEkgY2Fubm90IGhlbHAgZG9jLg==
samantha34@/ items [D@documents]
samantha34@/documents/ items [F@essay.docx;;F@presentation.pptx]
samantha34@/documents/essay.docx content SSBoYWQsIEkgY2Fubm90IGFueSBkZWFsIHdheSB0aGF0Lg==
samantha34@/documents/presentation.pptx content VGhpcyBpcyBhIGxvdCBvZiBwcmVzZW50YXRpb24gcGVyc29uYWwgY29udGVudC4=
sophie89@/ items [D@photos]
sophie89@/photos/ items [F@vacation.jpg;;F@family.png;;F@birthday.jpeg]
sophie89@/photos/vacation.jpg content VGhpcyBpcyBhIG5ldyBjb250ZW50IGZpbGUgaW4gdGhpcyBlbmQgY2FzZSBvZiB2YWNhdGlvbiBwYXJhbWV0ZXJzLg==
sophie89@/photos/family.png content VGhpcyBpcyBhIG5ldyBjb250ZW50IGZpbGUgaW4gdGhpcyBlbmQgY2FzZSBvZiBmYW1pbHkucG5n
sophie89@/photos/birthday.jpeg content VGhpcyBpcyBhIG5ldyBjb250ZW50IGZpbGUgaW4gdGhpcyBlbmQgY2FzZSBvZiBiaXRoZGFyeS5qcGVn
sean_w@/ items [D@work]
sean_w@/work/ items [F@project_plan.docx;;F@presentation.pptx]
sean_w@/work/project_plan.docx content U29ycnksIEkgY2Fubm90IG5lZWQgdG8gYXBwIG1ha2luZyBwcm9qZWN0IHBsYW4u
sean_w@/work/presentation.pptx content VGhpcyBpcyBhIG5ldyBjb250ZW50IGZpbGUgaW4gdGhpcyBlbmQgY2FzZSBvZiBwcmVzZW50YXRpb24gcGVyc29uYWwu
sophia_l@/ items [D@projects]
sophia_l@/projects/ items [F@proposal.docx;;F@budget.xlsx;;F@timeline.pdf]
sophia_l@/projects/proposal.docx content VGhpcyBpcyBhIG5ldyBwcm9qZWN0IGZpbGUgaW4gdGhpcyBlbmQgY2FzZSBvZiBwcm9qZWN0cyBhcmUgYWxyZWFkeSBkZWFsLg==
sophia_l@/projects/budget.xlsx content VGhpcyBpcyBhIG5ldyBjb3JyZXNwb25kaW5nIGZpbGUgaW4gdGhpcyBlbmQgY2FzZSBvZiBidWRnZXQu
sophia_l@/projects/timeline.pdf content VGhpcyBpcyBhIG5ldyB0aW1lbGluZSBmaWxlIGluIHRoaXMgZW5kIGNhc2Ugb2YgdGltZWxpbmUgcHJlc2VudGF0aW9uLg==
theodore_m@/ items [D@personal]
theodore_m@/personal/ items [F@diary.txt;;F@photos.zip]
theodore_m@/personal/diary.txt content VGhpcyBpcyBhIG5ldyBkaWFyeSBtb3ZlbWVudCBkaXJlY3Qu
theodore_m@/personal/photos.zip content U29ycnksIEkgY2Fubm90IG5lZWQgdG8gYXBwIHNpbWlsYXIgcGhvdG9zLg==
ursula_k@/ items [D@work]
ursula_k@/work/ items [F@report.docx;;F@presentation.pptx]
ursula_k@/work/report.docx content VGhpcyBpcyBhIG5ldyByZXBvcnQu
ursula_k@/work/presentation.pptx content VGhpcyBpcyBhIG5ldyBjb250ZW50IGZpbGUgaW4gdGhpcyBlbmQgY2FzZSBvZiBwcmVzZW50YXRpb24gcGVyc29uYWwu
sarah_k@/ items [D@projects]
sarah_k@/projects/ items [F@proposal.docx;;F@budget.xlsx;;F@timeline.pdf]
sarah_k@/projects/proposal.docx content VGhpcyBpcyBhIG5ldyBwcm9qZWN0IGZpbGUgaW4gdGhpcyBlbmQgY2FzZSBvZiBwcm9qZWN0cyBhcmUgYWxyZWFkeSBkZWFsLg==
sarah_k@/projects/budget.xlsx content VGhpcyBpcyBhIG5ldyBjb3JyZXNwb25kaW5nIGZpbGUgaW4gdGhpcyBlbmQgY2FzZSBvZiBidWRnZXQu
sarah_k@/projects/timeline.pdf content VGhpcyBpcyBhIG5ldyB0aW1lbGluZSBmaWxlIGluIHRoaXMgZW5kIGNhc2Ugb2YgdGltZWxpbmUgcHJlc2VudGF0aW9uLg==
tom_b@/ items [D@personal]
tom_b@/personal/ items [F@diary.txt;;F@photos.zip]
tom_b@/personal/diary.txt content VGhpcyBpcyBhIG5ldyBkaWFyeSBtb3ZlbWVudCBkaXJlY3Qu
tom_b@/personal/photos.zip content U29ycnksIEkgY2Fubm90IG5lZWQgdG8gYXBwIHNpbWlsYXIgcGhvdG9zLg==
upt_g@/ items [D@work]
upt_g@/work/ items [F@report.docx;;F@presentation.pptx]
upt_g@/work/report.docx content VGhpcyBpcyBhIG5ldyByZXBvcnQu
upt_g@/work/presentation.pptx content VGhpcyBpcyBhIG5ldyBjb250ZW50IGZpbGUgaW4gdGhpcyBlbmQgY2FzZSBvZiBwcmVzZW50YXRpb24gcGVyc29uYWwu
sashaNull@/ items [D@asdsaiodj]
sashaNull@/asdsaiodj/ items [F@README.md]
sashaNull@/asdsaiodj/README.md content IyBwZW5uY2xvdWQKUExlYXNlIG9wZW4gdGhlIHppcCBmaWxlIGFuZCB0aGUgZGV0YWlscyBhcmUgaW4gdGhlIHRoZXJlCg==
tronglu123@/ items [D@code;;F@README.md;;F@chatserver.cc;;F@proxy.cc]
tronglu123@/README.md content IyBVcGVubiBDSVM1MDUgSFczCk11bHRpY2FzdCBzZXJ2ZXJzL2NsaWVudHMgdGhhdCBkaXN0cmlidXRlIGNoYXQgbWVzc2FnZXMgdG8gZGlmZmVyZW50IGdyb3VwICAKVGhlIHNlcnZlciBzdXBwb3J0cyB1bm9yZGVyZWQsIEZJRk8gYW5kIHRvdGFsIG9yZGVyaW5ncyAgCgojIyBTeW50YXgKLi9jaGF0Y2xpZW50IFtTZXJ2ZXIncyBJUDpwb3J0XSAgCi4vY2hhdHNlcnZlciBbLW8gb3JkZXJdIFstdl0gW2NvbmZpZyBmaWxlXSBbaW5kZXhdICAKLW8gZm9sbG93ZWQgYnkgb3JkZXJpbmcgdHlwZSwgLXYgaXMgZGVidWcgZmxhZywgY29uZmlnIGZpbGUgaXMgdGhlIGZpbGUgdGhhdCBzdG9yZSBhZGRyZXNzIG9mIHNlcnZlcnMsIGluZGV4IGluZGljYXRlIHdoaWNoIGxpbmUgaW4gdGhlIGZpbGUgaXMgdGhpcyBzZXJ2ZXIKCiMjIFVzYWdlCiMjIyBDbGllbnQKL2pvaW4gW2dyb3VwXTogam9pbiBhIGNoYXQgcm9vbSwgdGhpcyBmYWlscyBpZiBhbHJlYWR5IGluIGEgY2hhdCByb29tICAKL25pY2sgW25hbWVdOiBpbml0IG5hbWUgd2lsbCBiZSBjbGllbnQncyBJUDpwb3J0LCB1c2UgdGhpcyB0byB1cGRhdGUgbmFtZSAgCi9wYXJ0OiBsZWF2ZSBjdXJyZW50IGNoYXQgcm9vbSAgCi9xdWl0OiBxdWl0IGFuZCBjbG9zZSBjbGllbnQgIApJbnB1dCB0aGF0IGRvZXNuJ3Qgc3RhcnQgd2l0aCAiLyIgaXMgY29uc2lkZXJlZCBhcyBhIG1lc3NhZ2UgdGhhdCBicm9hZGNhc3QgdG8gYWxsIGNsaWVudHMgaW4gdGhlIHNhbWUgY2hhdCByb29tICAKCiMjIFRlc3QKIyMjIFVzZSBwcm94eSB0byBzaW11bGF0ZSBtZXNzYWdlIGRlbGF5IGluIGxvY2FsaG9zdAouL3Byb3h5IFstdl0gWy1kIG1heCBkZWxheSBtaWNyb3NlY29uZHNdIFstbCBsb3NzUHJvYmFiaWxpdHldIFtjb25maWcgZmlsZV0gIApJZiB1c2luZyBwcm94eSwgY29uZmlnIGZpbGUgc2hvdWxkIGhhdmUgMiBhZGRyZXNzZXMgZm9yIGV2ZXJ5IHNlcnZlcjogZm9yd2FyZCBhbmQgYmluZC4gT3RoZXJ3aXNlIHNlcnZlcnMgaGF2ZSAxIGFkZHJlc3MuCiMjIyBVc2Ugc3RyZXNzdGVzdCB0byB2ZXJpZnkgY2FwYWNpdHkgYW5kIG9yZGVyaW5nCi4vc3RyZXNzdGVzdCBbLWQgZGVsYXldIFstbyBvcmRlcl0gWy1jICNjbGllbnRzXSBbLW0gI21lc3NhZ2VzXSBbLWcgI2dyb3VwXSBbY29uZmlnIGZpbGVdICAKS2VlcCBhbGwgc2VydmVycyBsaXN0ZWQgaW4gY29uZmlnIGZpbGUgcnVubmluZyBiZWZvcmUgc3RyZXNzdGVzdAoKIyMgVE9ETzogYWRkIGNhdXNhbCBvcmRlcmluZyBhbmQgbWVzc2FnZSBsb3NzZXMgaGFuZGxpbmcK
tronglu123@/chatclient.cc content I2luY2x1ZGUgPHN0ZGxpYi5oPgojaW5jbHVkZSA8c3RkaW8uaD4KI2luY2x1ZGUgPHVuaXN0ZC5oPgojaW5jbHVkZSA8aW9zdHJlYW0+CiNpbmNsdWRlIDxzdHJpbmcuaD4KI2luY2x1ZGUgPHN0cmluZz4KI2luY2x1ZGUgPGFycGEvaW5ldC5oPgp1c2luZyBuYW1lc3BhY2Ugc3RkOwoKLy8gZ2xvYmFsCmNvbnN0IGludCBCVUZGX1NJWkUgPSAxMDAwOwoKaW50IG1haW4oaW50IGFyZ2MsIGNoYXIgKmFyZ3ZbXSkKewoJaWYgKGFyZ2MgIT0gMikgewoJCWNlcnIgPDwgIld1ZGFvIExpbmcgKHd1ZGFvKSBAVVBlbm5cbiI7CgkJZXhpdCgxKTsKCX0KCgkvLyBjcmVhdGUgYSBuZXcgc29ja2V0KFVEUCkKCWludCBzb2NrID0gc29ja2V0KFBGX0lORVQsIFNPQ0tfREdSQU0sIDApOwoJaWYgKHNvY2sgPCAwKXsKCQljZXJyIDw8ICJjYW5ub3Qgb3BlbiBzb2NrZXRcclxuIjsKCQlleGl0KDIpOwoJfQogICAgLy8gc2V0IHBvcnQgZm9yIHJldXNlCgljb25zdCBpbnQgUkVVU0UgPSAxOwoJc2V0c29ja29wdChzb2NrLCBTT0xfU09DS0VULCBTT19SRVVTRUFERFIsICZSRVVTRSwgc2l6ZW9mKFJFVVNFKSk7CgoJLy8gcGFyc2UgY29tbWFuZCBhbmQgY29ubmVjdCB0byBzZXJ2ZXIKCXN0cnVjdCBzb2NrYWRkcl9pbiBkZXN0OwoJYnplcm8oJmRlc3QsIHNpemVvZihkZXN0KSk7CglkZXN0LnNpbl9mYW1pbHkgPSBBRl9JTkVUOwoKCWNoYXIqIHRva2VuID0gc3RydG9rKGFyZ3ZbMV0sIjoiKTsgLy8gbm93IHRva2VuIGlzIElQCglpbmV0X3B0b24oQUZfSU5FVCwgdG9rZW4gLCAmZGVzdC5zaW5fYWRkcik7Cgl0b2tlbiA9IHN0cnRvayhOVUxMLCI6Iik7IC8vIG5vdyB0b2tlbiBpcyBwb3J0CglkZXN0LnNpbl9wb3J0ID0gaHRvbnMoYXRvaSh0b2tlbikpOwoKCS8vIHNvdXJjZSBhZGRyZXNzCglzdHJ1Y3Qgc29ja2FkZHJfaW4gc3JjOwoJc29ja2xlbl90IHNyY19zaXplID0gc2l6ZW9mKHNyYyk7CgoJd2hpbGUgKHRydWUpewoJCS8vIHVzZSBzZWxlY3QgZm9yIEkvTyB3YWl0aW5nLCByZWZlcmVuY2U6IGh0dHBzOi8vd3d3LmdudS5vcmcvc29mdHdhcmUvbGliYy9tYW51YWwvaHRtbF9ub2RlL1dhaXRpbmctZm9yLUlfMDAyZk8uaHRtbAoJCWZkX3NldCByZWFkX3NldDsKCgkJRkRfWkVSTygmcmVhZF9zZXQpOwoJCUZEX1NFVChTVERJTl9GSUxFTk8sICZyZWFkX3NldCk7IC8vIGtleWJvYXJkCgkJRkRfU0VUKHNvY2ssICZyZWFkX3NldCk7IC8vIHNvY2tldAoKCQkvLyBibG9jayB1bnRpbCBJL08gaXMgcmVhZHkKCQlpbnQgcmVhZGFibGUgPSBzZWxlY3Qoc29jaysxLCAmcmVhZF9zZXQsIE5VTEwsIE5VTEwsIE5VTEwpOwoKCQljaGFyIGJ1ZmZbQlVGRl9TSVpFXTsKCQlpbnQgcmVhZF9sZW47CgoJCWlmIChGRF9JU1NFVChTVERJTl9GSUxFTk8sICZyZWFkX3NldCkpIHsKCQkJLy8ga2V5Ym9hcmQgaW5wdXQKCQkJcmVhZF9sZW4gPSByZWFkKFNURElOX0ZJTEVOTywgYnVmZiwgQlVGRl9TSVpFKTsKCQkJYnVmZltyZWFkX2xlbi0xXSA9IDA7IC8vIHJlbW92ZSBcbiBhdCB0aGUgZW5kCgkJCXNlbmR0byhzb2NrLCBidWZmLCBzdHJsZW4oYnVmZiksIDAsIChzdHJ1Y3Qgc29ja2FkZHIqKSAmZGVzdCwgc2l6ZW9mKGRlc3QpKTsKCgkJCWNoYXIqIHRva2VuID0gc3RydG9rKGJ1ZmYsICIgIik7CgkJCWlmIChzdHJjYXNlY21wKHRva2VuLCAiL3F1aXQiKSA9PSAwKSB7CgkJCQlicmVhazsKCQkJfQoJCX0gZWxzZSB7CgkJCS8vIHJlc3BvbnNlIGZyb20gc2VydmVyCgkJCXJlYWRfbGVuID0gcmVjdmZyb20oc29jaywgYnVmZiwgc2l6ZW9mKGJ1ZmYpLCAwLCAoc3RydWN0IHNvY2thZGRyKikgJnNyYywgJnNyY19zaXplKTsKCQkJY291dCA8PCBidWZmIDw8IGVuZGw7CgkJfQoJCS8vIGNsZWFyIGJ1ZmZlciBieSBzZXR0aW5nIHplcm9zCgkJbWVtc2V0KGJ1ZmYsIDAsIEJVRkZfU0laRSk7Cgl9CgoJLy8gY2xvc2Ugc29ja2V0CgljbG9zZShzb2NrKTsKCXJldHVybiAwOwp9ICAK
tronglu123@/chatserver.cc content 
tronglu123@/code/ items [F@stresstest.cc;;D@newdir]
tronglu123@/code/newdir/ items []
tronglu123@/code/stresstest.cc content 
tronglu123@/mydrive/ items []
tronglu123@/proxy.cc content 

